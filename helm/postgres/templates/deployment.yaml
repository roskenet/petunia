apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "petunia.fullname" . }}
  labels:
    {{- include "petunia.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "petunia.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "petunia.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: postgres-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          securityContext:
            runAsUser: 0
          env:
            - name: POSTGRES_PASSWORD
              value: "postgres"
          command:
            - sh
            - -c
            - |
              mkdir -p /var/lib/postgresql/data
              chown -R 999:999 /var/lib/postgresql/data
              chmod 700 /var/lib/postgresql/data

              if [ ! -f /var/lib/postgresql/data/PG_VERSION ]; then
                echo "Initializing PostgreSQL database..."
                su postgres -c "/usr/lib/postgresql/17/bin/initdb -D /var/lib/postgresql/data"

                su postgres -c "/usr/lib/postgresql/17/bin/pg_ctl -D /var/lib/postgresql/data -o '-c listen_addresses=localhost' -w start"
              
                echo "ALTER USER postgres WITH PASSWORD '${POSTGRES_PASSWORD}';" | su postgres -c "psql"
                su postgres -c "/usr/lib/postgresql/17/bin/pg_ctl -D /var/lib/postgresql/data -m fast stop"
              else
                echo "PostgreSQL already initialized"
              fi
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      securityContext: 
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: postgres
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["postgres", "-c", "config_file=/etc/postgres-config/postgresql.conf"]
          volumeMounts:
            - name: postgres-config
              mountPath: /etc/postgres-config
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-config
          configMap:
            name: {{ include "petunia.fullname" . }}
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "petunia.persistenceName" . }}

